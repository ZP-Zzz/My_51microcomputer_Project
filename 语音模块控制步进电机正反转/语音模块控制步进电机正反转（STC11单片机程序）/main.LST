C51 COMPILER V9.00   MAIN                                                                  05/17/2021 20:30:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil6\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "config.h"
   2          
   3          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
   4          uint8 idata nAsrStatus=0;       
   5          //应用IO口定义 （模块标注 P2）
   6          sbit PA1=P1^0; //对应板上标号 P1.0
   7          sbit PA2=P1^1;  //对应板上标号 P1.1
   8          sbit PA3=P1^2;  //.....
   9          sbit PA4=P1^3;  //.....
  10          sbit PA5=P1^4;  //.....
  11          sbit PA6=P1^5;  //.....
  12          sbit PA7=P1^6;  //对应板上标号 P1.6
  13          sbit PA8=P1^7;  //对应板上标号 P1.7
  14          sbit LED=P4^2;//信号指示灯
  15          
  16          void MCU_init(); 
  17          void ProcessInt0(); //识别处理函数
  18          void delay(unsigned long uldata);
  19          void User_handle(uint8 dat);//用户执行操作函数
  20          
  21          
  22          /***********************************************************
  23          * 名    称： void  main(void)
  24          * 功    能： 主函数     程序入口
  25          * 入口参数：  
  26          * 出口参数：
  27          * 说    明：                                     
  28          * 调用方法： 
  29          **********************************************************/ 
  30          void  main(void)
  31          {
  32   1              uint8 idata nAsrRes;
  33   1              uint8 i=0;
  34   1              MCU_init();
  35   1              LD_Reset();
  36   1              nAsrStatus = LD_ASR_NONE;               //      初始状态：没有在作ASR
  37   1              
  38   1              PA1=1;
  39   1              PA2=1;
  40   1      
  41   1              while(1)
  42   1              {
  43   2                      switch(nAsrStatus)
  44   2                      {
  45   3                              case LD_ASR_RUNING:
  46   3                              case LD_ASR_ERROR:              
  47   3                                      break;
  48   3                              case LD_ASR_NONE:
  49   3                              {
  50   4                                      nAsrStatus=LD_ASR_RUNING;
  51   4                                      if (RunASR()==0)        /*      启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  52   4                                      {
  53   5                                              nAsrStatus = LD_ASR_ERROR;
  54   5                                      }
  55   4                                      break;
C51 COMPILER V9.00   MAIN                                                                  05/17/2021 20:30:04 PAGE 2   

  56   4                              }
  57   3                              case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  58   3                              {                               
  59   4                                      nAsrRes = LD_GetResult();               /*获取结果*/
  60   4                                      User_handle(nAsrRes);//用户执行函数 
  61   4                                      nAsrStatus = LD_ASR_NONE;
  62   4                                      break;
  63   4                              }
  64   3                              case LD_ASR_FOUNDZERO:
  65   3                              default:
  66   3                              {
  67   4                                      nAsrStatus = LD_ASR_NONE;
  68   4                                      break;
  69   4                              }
  70   3                      }                       
  71   2              }
  72   1      
  73   1      }
  74          
  75          /***********************************************************
  76          * 名    称： void MCU_init()
  77          * 功    能： 单片机初始化
  78          * 入口参数：  
  79          * 出口参数：
  80          * 说    明：                                     
  81          * 调用方法： 
  82          **********************************************************/ 
  83          void MCU_init()
  84          {
  85   1              P0 = 0xff;
  86   1              P1 = 0x00;
  87   1              P2 = 0xff;
  88   1              P3 = 0xff;
  89   1              P4 = 0xff;
  90   1      
  91   1              P1M0=0XFF;      //P1端口设置为推挽输出功能，即提高IO口驱动能力，从驱动继电器模块工作
  92   1              P1M1=0X00;
  93   1      
  94   1              LD_MODE = 0;            //      设置MD管脚为低，并行模式读写
  95   1              IE0=1;
  96   1              EX0=1;
  97   1              EA=1;
  98   1      }
  99          /***********************************************************
 100          * 名    称：    延时函数
 101          * 功    能：
 102          * 入口参数：  
 103          * 出口参数：
 104          * 说    明：                                     
 105          * 调用方法： 
 106          **********************************************************/ 
 107          void Delay200us()               //@22.1184MHz
 108          {
 109   1              unsigned char i, j;
 110   1              _nop_();
 111   1              _nop_();
 112   1              i = 5;
 113   1              j = 73;
 114   1              do
 115   1              {
 116   2                      while (--j);
 117   2              } while (--i);
C51 COMPILER V9.00   MAIN                                                                  05/17/2021 20:30:04 PAGE 3   

 118   1      }
 119          
 120          void  delay(unsigned long uldata)
 121          {
 122   1              unsigned int j  =  0;
 123   1              unsigned int g  =  0;
 124   1              while(uldata--)
 125   1              Delay200us();
 126   1      }
 127          
 128          /***********************************************************
 129          * 名    称： 中断处理函数
 130          * 功    能：
 131          * 入口参数：  
 132          * 出口参数：
 133          * 说    明：                                     
 134          * 调用方法： 
 135          **********************************************************/ 
 136          void ExtInt0Handler(void) interrupt 0  
 137          {       
 138   1              ProcessInt0();                          /*      LD3320 送出中断信号，包括ASR和播放MP3的中断，需要在中断处理函数中分别处理*/
 139   1      }
 140          /***********************************************************
 141          * 名    称：用户执行函数 
 142          * 功    能：识别成功后，执行动作可在此进行修改 
 143          * 入口参数： 无 
 144          * 出口参数：无
 145          * 说    明： 通过控制PAx端口的高低电平，从而控制外部继电器的通断                                         
 146          **********************************************************/
 147          void    User_handle(uint8 dat)
 148          {
 149   1                       if(0==dat)
 150   1                       {
 151   2                              G0_flag=ENABLE;
 152   2                                      LED=0;
 153   2                       }
 154   1                       else if(ENABLE==G0_flag)
 155   1                       {      
 156   2                                      G0_flag=DISABLE;
 157   2                                      LED=1;
 158   2                               switch(dat)               /*对结果执行相关操作,客户修改*/
 159   2                                {
 160   3      //                                case CODE_DMCS:                       /*命令“测试”*/
 161   3      //                                              PA1=1;//让PA1端口为高电平
 162   3      //                                                                                                       break;
 163   3      //                                      case CODE_KFBYZ:         /*命令“全开”*/
 164   3      //                                              PA2=1;//让PA2端口为高电平
 165   3                                                                                                               break;
 166   3                                              case CODE_BDDK:         /*命令“复位”*/                        //把灯打开      
 167   3                                                      PA1=0;//让PA1端口为低电平 
 168   3                                                                                                              break;
 169   3                                              case CODE_BDGD:         /*命令“复位”*/                        //把灯关掉      
 170   3                                                      PA1=1;//让PA1端口为高电平
 171   3                                                                                                              break;
 172   3                                              case CODE_DJZZ:         /*命令“复位”*/                        //电机正转      
 173   3                                                      PA2=0;//让PA2端口为低电平
 174   3                                                                                                              break;
 175   3                                              case CODE_DJFZ:         /*命令“复位”*/                        //电机反转      
 176   3                                                      PA2=1;//让PA2端口为高电平
 177   3                                                                                                              break;
 178   3      //                                      case CODE_GZ:           /*命令“复位”*/                                
 179   3      //                                              PA6=1;//让PA6端口为高电平
C51 COMPILER V9.00   MAIN                                                                  05/17/2021 20:30:04 PAGE 4   

 180   3      //                                                                                                      break;                                                                                                                                                                                                                  
 181   3                                      }       
 182   2                              }       
 183   1      }        


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    255    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       9
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
